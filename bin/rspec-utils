#!/usr/bin/env ruby

def setup_load_path
  bin_dir = File.expand_path File.dirname(__FILE__)
  lib_dir = File.expand_path File.join(bin_dir, '..', 'lib')
  $LOAD_PATH.unshift lib_dir
end

def run!(argv)
  sub_command, *paths = argv 
  case
  when sub_command.nil?
    exit_with_usage
  when sub_command != 'context-loc'
    exit_with_message "Invalid option: #{sub_command}"
  when paths.empty?
    exit_with_usage
  else
    require 'rspec/rspec_gateway'
    do_context_loc paths
  end
end

def exit_with_usage
  exit_with_message 'Usage: rspec-utils context-loc <xyz_spec.rb> ...'
end

def exit_with_message(message)
  $stderr.puts message
  exit 1
end

def do_context_loc(paths)
  grand_total = 0
  paths.each do |path|
    File.open path do |file|
      gateway = RSpecGateway.new file
      context_sizes = gateway.context_sizes
      context_sizes.each { |x| puts "#{x} #{path}" }
      grand_total += context_sizes.reduce(:+) || 0
    end
  end
  puts "#{grand_total} total" if paths.size > 1
end

setup_load_path
run! ARGV
